'use client';
import{__rest as e}from"tslib";import"../../../contexts/BaseColorContext.js";import"../../../contexts/IndexContext.js";import"../../../contexts/RootStylesContext.js";import t from"../../../contexts/SelectedValueContext.js";import r,{useContext as o}from"react";import{tremorTwMerge as a}from"../../../lib/tremorTwMerge.js";import{isValueInArray as n,makeClassName as c}from"../../../lib/utils.js";import{Listbox as s}from"@headlessui/react";const m=c("MultiSelectItem"),i=r.forwardRef(((c,i)=>{const{value:l,className:d,children:u}=c,p=e(c,["value","className","children"]),{selectedValue:x}=o(t),k=n(l,x);return r.createElement(s.Option,Object.assign({className:a(m("root"),"flex justify-start items-center cursor-default text-tremor-default p-2.5","ui-active:bg-tremor-background-muted ui-active:text-tremor-content-strong ui-selected:text-tremor-content-strong text-tremor-content-emphasis","dark:ui-active:bg-dark-tremor-background-muted dark:ui-active:text-dark-tremor-content-strong dark:ui-selected:text-dark-tremor-content-strong dark:ui-selected:bg-dark-tremor-background-muted dark:text-dark-tremor-content-emphasis",d),ref:i,key:l,value:l},p),r.createElement("input",{type:"checkbox",className:a(m("checkbox"),"flex-none focus:ring-none focus:outline-none cursor-pointer mr-2.5","accent-tremor-brand","dark:accent-dark-tremor-brand"),checked:k,readOnly:!0}),r.createElement("span",{className:"whitespace-nowrap truncate"},null!=u?u:l))}));i.displayName="MultiSelectItem";export{i as default};
