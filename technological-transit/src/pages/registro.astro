---
import Input from "../components/input.astro";
import Botones from "../components/botones.astro";
---

<!doctype html>
<html lang="es">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Registro</title>
    <link
      href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"
      rel="stylesheet"
    />
  </head>

  <body class="flex flex-col items-center justify-center min-h-screen bg-white-100">
  

  
    <div
      class="flex flex-col justify-center items center w-screen ">
      <div class="grid grid-cols-2 gap-3 px-96">
        <div>
          <img class="w-full h-auto object-cover" src="../img/img_registro.png"/>
        </div>
        <form class=" form flex flex-col justify-center gap-10">
          <div class="form-container bg-white p-10 rounded-lg shadow-lg" class="w-96"> 
       </form>
         
         <div class="justify-center item-center"><h2 class="mb-4 text-2xl font-bold text-center">Inscribirte</h2></div> 
         
         <div class="mb-4">
          <label for="Nombre" class="block mb-2 text-sm font-medium">
            
          </label>                     
          <input
            id="Nombre"
            type="text"
            class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-green-500 focus:ring-1 bg-gray-200"
            placeholder="Nombre Completo:"
          />
        </div>
        <div class="mb-4">
          <label for="Numero de Documento" class="block mb-2 text-sm font-medium">
            
          </label>                     
          <input
            id="Documento"
            type="text"
            class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-green-500 focus:ring-1 bg-gray-200"
            placeholder="Numero De Documento:"
          />
        </div>
            <div class="mb-4">
              <label for="usuario" class="block mb-2 text-sm font-medium">
                
              </label>
              <input
                id="usuario"
                type="text"
                class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-green-500 focus:ring-1 bg-gray-200"
                placeholder="Correo:"
              />
            </div>
            <div class="mb-4">
              <label for="contraseña" class="block mb-2 text-sm font-medium">
               
              </label>
              <input
                id="contraseña"
                type="password"
                class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-green-500 focus:ring-1 bg-gray-200"
                placeholder="Contraseña:"
              />
            </div>
            <div class="mb-4">
              <label for="Repetir Contraseña" class="block mb-2 text-sm font-medium">
                
              </label>                     
              <input
                id="Repetir Contraseña"
                type="text"
                class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-green-500 focus:ring-1 bg-gray-200"
                placeholder="Confirmar Contraseña:"
              />
            </div>
            <div class="flex flex-box w-full gap-4  ">
              <input id="recordar" class="flex items-start" type="checkbox" />
              <label for="recordar" class="text-sm font-medium">
                Terminos y Condiciones 
              </label>
              
            </div>
            <div class="flex flex-col items-center justify-center">
              <button 
              type="submit"
              class="px-2 py-2 text-white bg-green-500 rounded-md hover:bg-green-600 focus:outline-none focus:ring-green-500 focus:ring-1 w-44 items-center"
            >
              Registrarse
            </button>
           
           <u> <a href="inicio" class="text-sm text-black-600 hover:text-black-700">
              Iniciar Sesión
            </a></u>
             </div>
    

          </form>
          
 
      </div>
    </div>
  </div>
  
   <script>
const handleSubmit = (event) => {
    event.preventDefault();  // "event" es posiblemente "undefined".

    const newErrors = {};

    // Asegúrate de que `formData` esté definido
    const formData = {}; // Ejemplo de definición. Debes reemplazar esto con la definición real.
    
    const nombreError = validateNombre(formData.nombre);
    if (nombreError) {
        newErrors.nombre = nombreError;  // No se encuentra el nombre 'nombreError'.
    }

    // Asegúrate de que `setErrors` esté definido
    const setErrors = (errors) => {
        // Ejemplo de implementación. Debes reemplazar esto con la implementación real.
        console.log(errors);
    };

    // Add validation checks for other fields and update newErrors

    setErrors(newErrors);

    // If no errors, proceed with form submission logic (e.g., API call)
    if (Object.keys(newErrors).length === 0) {
        // Submit form data
    }
};

</script>

  </html>
      
   